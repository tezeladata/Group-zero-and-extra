{"mappings":"ACAA,MAAM,EAAQ,SAAS,cAAc,CAAC,SAChC,EAAS,SAAS,cAAc,CAAC,UACjC,EAAY,SAAS,cAAc,CAAC,mBACpC,EAAU,iCAEhB,SAAS,EAAS,CAAG,EACjB,MAAM,GACD,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,IAC9B,IAAI,CAAC,AAAA,IACF,EAAM,SAAS,CAAG,EAAK,OAAO,CAC9B,EAAO,SAAS,CAAG,EAAK,MAAM,AAClC,GACC,KAAK,CAAC,AAAA,IACH,EAAM,SAAS,CAAG,oBAClB,EAAO,SAAS,CAAG,GACnB,QAAQ,KAAK,CAAC,wBAAyB,EAC3C,EACR,CAGA,EAAS,GAET,EAAU,gBAAgB,CAAC,QAAS,KAChC,EAAS,EACb,GAGA,MAAM,EAAa,SAAS,cAAc,CAAC,eAC3C,IAAI,EAAY,EAAE,CAClB,MAAM,EAAU,SAAS,cAAc,CAAC,YAuDxC,SAAS,IACL,IAAM,EAAc,SAAS,cAAc,CAAC,gBACxC,GACA,EAAY,gBAAgB,CAAC,QAAS,KAClC,EAAQ,KAAK,CAAC,OAAO,CAAG,MAC5B,EAER,CA5DA,EAAW,gBAAgB,CAAC,QAAS,KACjC,IAAM,EAAe,CACjB,OAAQ,EAAO,WAAW,CAC1B,QAAS,EAAM,WAAW,AAC9B,EAKA,GAJoB,EAAU,IAAI,CAAC,AAAA,GAC/B,EAAW,MAAM,GAAK,EAAa,MAAM,EAAI,EAAW,OAAO,GAAK,EAAa,OAAO,EAkBrF,CACH,IAAM,EAAS,SAAS,cAAc,CAAC,oBACvC,CAAA,EAAO,KAAK,CAAC,OAAO,CAAG,QACvB,WAAW,KACP,EAAO,KAAK,CAAC,OAAO,CAAG,MAC3B,EAAG,KACP,KArBkB,CAEd,EAAU,IAAI,CAAC,GACf,QAAQ,GAAG,CAAC,eAAgB,GAG5B,IAAM,EAAO,SAAS,aAAa,CAAC,KAE9B,EAAa,SAAS,aAAa,CAAC,OAC1C,CAAA,EAAW,WAAW,CAAG,EAAa,MAAM,CAAG,KAE/C,EAAK,WAAW,CAAC,GACjB,EAAK,WAAW,CAAC,SAAS,cAAc,CAAC,EAAa,OAAO,GAE7D,EAAQ,WAAW,CAAC,EACxB,CAOA,QAAQ,GAAG,CAAC,EAChB,GAIA,AADmB,SAAS,cAAc,CAAC,eAChC,gBAAgB,CAAC,QAAS,KACjC,EAAQ,KAAK,CAAC,OAAO,CAAG,QACxB,WAAW,KACP,EAAQ,KAAK,CAAC,OAAO,CAAG,MAC5B,EAAG,KACP,GAIA,AADoB,SAAS,cAAc,CAAC,cAChC,gBAAgB,CAAC,QAAS,KAClC,EAAY,EAAE,CACd,EAAQ,SAAS,CAAG,uFACpB,EAAQ,KAAK,CAAC,OAAO,CAAG,OACxB,GACJ,GAYA","sources":["<anon>","src/script.js"],"sourcesContent":["const quote = document.getElementById(\"quote\");\nconst author = document.getElementById(\"author\");\nconst genButton = document.getElementById(\"generate-button\");\nconst api_url = \"https://api.quotable.io/random\";\nfunction getQuote(url) {\n    fetch(url).then((response)=>response.json()).then((data)=>{\n        quote.innerHTML = data.content;\n        author.innerHTML = data.author;\n    }).catch((error)=>{\n        quote.innerHTML = \"An error occurred\";\n        author.innerHTML = \"\";\n        console.error(\"Error fetching quote:\", error);\n    });\n}\n// When user opens the website, some quote has to be already generated:\ngetQuote(api_url);\ngenButton.addEventListener(\"click\", ()=>{\n    getQuote(api_url);\n});\n// For list\nconst saveButton = document.getElementById(\"save-button\");\nlet quoteList = [];\nconst listDiv = document.getElementById(\"list-div\");\nsaveButton.addEventListener(\"click\", ()=>{\n    const currentQuote = {\n        author: author.textContent,\n        content: quote.textContent\n    };\n    const isDuplicate = quoteList.some((savedQuote)=>savedQuote.author === currentQuote.author && savedQuote.content === currentQuote.content);\n    if (!isDuplicate) {\n        // Add the current quote to the list\n        quoteList.push(currentQuote);\n        console.log(\"Quote saved:\", currentQuote);\n        // Create a new p element and append it to the list-div\n        const newP = document.createElement(\"p\");\n        const authorSpan = document.createElement(\"span\");\n        authorSpan.textContent = currentQuote.author + \": \";\n        newP.appendChild(authorSpan);\n        newP.appendChild(document.createTextNode(currentQuote.content));\n        listDiv.appendChild(newP);\n    } else {\n        const newDiv = document.getElementById(\"already-saved-div\");\n        newDiv.style.display = \"block\";\n        setTimeout(()=>{\n            newDiv.style.display = \"none\";\n        }, 1500);\n    }\n    console.log(quoteList);\n});\n// For list to appear:\nconst listButton = document.getElementById(\"list-button\");\nlistButton.addEventListener(\"click\", ()=>{\n    listDiv.style.display = \"block\";\n    setTimeout(()=>{\n        listDiv.style.display = \"none\";\n    }, 7500);\n});\n// To clear whole list:\nconst clearButton = document.getElementById(\"clear-list\");\nclearButton.addEventListener(\"click\", ()=>{\n    quoteList = [];\n    listDiv.innerHTML = '<div id=\"reset-div\"><i class=\"fa-solid fa-circle-xmark\" id=\"reset-button\"></i></div>';\n    listDiv.style.display = \"none\";\n    attachResetButtonListener();\n});\n// Created function, because event was handled before the creation of element\nfunction attachResetButtonListener() {\n    const resetButton = document.getElementById(\"reset-button\");\n    if (resetButton) resetButton.addEventListener(\"click\", ()=>{\n        listDiv.style.display = \"none\";\n    });\n}\nattachResetButtonListener();\n\n//# sourceMappingURL=index.d027727c.js.map\n","const quote = document.getElementById(\"quote\");\r\nconst author = document.getElementById(\"author\");\r\nconst genButton = document.getElementById(\"generate-button\");\r\nconst api_url = \"https://api.quotable.io/random\";\r\n\r\nfunction getQuote(url) {\r\n    fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            quote.innerHTML = data.content;\r\n            author.innerHTML = data.author;\r\n        })\r\n        .catch(error => {\r\n            quote.innerHTML = \"An error occurred\";\r\n            author.innerHTML = \"\";\r\n            console.error('Error fetching quote:', error);\r\n        });\r\n}\r\n\r\n// When user opens the website, some quote has to be already generated:\r\ngetQuote(api_url);\r\n\r\ngenButton.addEventListener(\"click\", () => {\r\n    getQuote(api_url);\r\n});\r\n\r\n// For list\r\nconst saveButton = document.getElementById(\"save-button\");\r\nlet quoteList = [];\r\nconst listDiv = document.getElementById(\"list-div\");\r\n\r\nsaveButton.addEventListener(\"click\", () => {\r\n    const currentQuote = {\r\n        author: author.textContent,\r\n        content: quote.textContent\r\n    };\r\n    const isDuplicate = quoteList.some(savedQuote =>\r\n        savedQuote.author === currentQuote.author && savedQuote.content === currentQuote.content\r\n    );\r\n\r\n    if (!isDuplicate) {\r\n        // Add the current quote to the list\r\n        quoteList.push(currentQuote);\r\n        console.log(\"Quote saved:\", currentQuote);\r\n\r\n        // Create a new p element and append it to the list-div\r\n        const newP = document.createElement(\"p\");\r\n\r\n        const authorSpan = document.createElement(\"span\");\r\n        authorSpan.textContent = currentQuote.author + \": \";\r\n\r\n        newP.appendChild(authorSpan);\r\n        newP.appendChild(document.createTextNode(currentQuote.content));\r\n\r\n        listDiv.appendChild(newP);\r\n    } else {\r\n        const newDiv = document.getElementById(\"already-saved-div\");\r\n        newDiv.style.display = \"block\";\r\n        setTimeout(() => {\r\n            newDiv.style.display = \"none\";\r\n        }, 1500);\r\n    }\r\n    console.log(quoteList);\r\n});\r\n\r\n// For list to appear:\r\nconst listButton = document.getElementById(\"list-button\");\r\nlistButton.addEventListener(\"click\", () => {\r\n    listDiv.style.display = \"block\";\r\n    setTimeout(() => {\r\n        listDiv.style.display = \"none\";\r\n    }, 7500);\r\n});\r\n\r\n// To clear whole list:\r\nconst clearButton = document.getElementById(\"clear-list\");\r\nclearButton.addEventListener(\"click\", () => {\r\n    quoteList = [];\r\n    listDiv.innerHTML = '<div id=\"reset-div\"><i class=\"fa-solid fa-circle-xmark\" id=\"reset-button\"></i></div>';\r\n    listDiv.style.display = \"none\";\r\n    attachResetButtonListener(); \r\n});\r\n\r\n// Created function, because event was handled before the creation of element\r\nfunction attachResetButtonListener() {\r\n    const resetButton = document.getElementById(\"reset-button\");\r\n    if (resetButton) {\r\n        resetButton.addEventListener(\"click\", () => {\r\n            listDiv.style.display = \"none\";\r\n        });\r\n    }\r\n}\r\n\r\nattachResetButtonListener();"],"names":["quote","document","getElementById","author","genButton","api_url","getQuote","url","fetch","then","response","json","data","innerHTML","content","catch","error","console","addEventListener","saveButton","quoteList","listDiv","attachResetButtonListener","resetButton","style","display","currentQuote","textContent","some","savedQuote","newDiv","setTimeout","push","log","newP","createElement","authorSpan","appendChild","createTextNode","listButton","clearButton"],"version":3,"file":"index.d027727c.js.map"}